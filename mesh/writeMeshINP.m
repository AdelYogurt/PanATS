function writeMeshINP(mesh_filestr,mesh_data,marker_name_list)
% write mesh data into inp file(ABAQUS analysis format)
%
% input:
% mesh_filestr, mesh_data, marker_name_list(default all markers)
%
% notice:
% mesh_data(single zone): mesh_data.name, mesh_data.point_list, mesh_data.(marker)
% marker: marker.type, marker.ID, marker.element_list, marker.number_list
% notice: marker which has the same name of file is volume element
%
if nargin < 3
    marker_name_list=[];
end
if isempty(marker_name_list)
    marker_name_list=fieldnames(mesh_data);
end
marker_index=1;
while marker_index <= length(marker_name_list)
    marker_name=marker_name_list{marker_index};
    if strcmp(marker_name,'geometry')
        marker_name_list(marker_index)=[];
    else
        marker_index=marker_index+1;
    end
end

file_mesh=fopen(mesh_filestr,'w');

% write basic information of inp file
fprintf(file_mesh,'*Heading\n');
fprintf(file_mesh,'** Job name: Job-%s Model name: Model-%s\n',mesh_filestr,mesh_filestr);
fprintf(file_mesh,'** Generated by: matlab::writeMeshDataINP\n');
fprintf(file_mesh,'*Preprint, echo=NO, model=NO, history=NO, contact=NO\n');

% write start of part
fprintf(file_mesh,'**\n');
fprintf(file_mesh,'** PARTS\n');
fprintf(file_mesh,'**\n');

% write all part
point_list=mesh_data.geometry.point_list;
for marker_index=1:length(marker_name_list)
    marker_name=marker_name_list{marker_index};
    marker=mesh_data.(marker_name);

    % write part name
    fprintf(file_mesh,'*Part, name=%s\n',marker_name);

    % notice, element index in each part of inp file start from 1
    % search min and max element index of mesh
    element_list=marker.element_list;
    number_list=marker.number_list;
    if marker.ID == 20
        [element_list,ID_list]=getSeparteElement(element_list,number_list);
    end

    min_node_index=min(min(element_list));
    max_point_index=max(max(element_list));

    % write part point data
    fprintf(file_mesh,'*Node\n');
    for point_index=min_node_index:max_point_index
        fprintf(file_mesh,'% 7d',point_index-min_node_index+1);
        for dimension_index=1:3
            fprintf(file_mesh,',% 14f',point_list(point_index,dimension_index));
        end
        fprintf(file_mesh,'\n');
    end

    % write element data
    % notice, element index in each part of inp file start from 1
    if marker.ID == 20
        element_number=length(ID_list);
        [ID_list,index_list]=sort(ID_list);
        map_list=sort(index_list);
        node_index_list=cumsum(number_list);

        % sort element_list
        element_list_old=element_list;
        node_index=0;
        for element_index=1:element_number
            node_number=number_list(map_list(element_index));
            element_list(node_index+(1:node_number))=element_list_old...
                (node_index_list(map_list(element_index))-(node_number:-1:1)+1);
            node_index=node_index+node_number;
        end

        number_list=number_list(index_list);
        id=ID_list(1);
        
        fprintf(file_mesh,'*Element, type=%s\n',typeINPID(id));
        node_index=0;
        for element_index=1:element_number
            % if element type change, state new type
            if ID_list(element_index) ~= id
                id=ID_list(element_index);
                fprintf(file_mesh,'*Element, type=%s\n',typeINPID(id));
            end

            fprintf(file_mesh,'% 4d',element_index);
            node_number=number_list(element_index);

            for index=1:node_number
                fprintf(file_mesh,',% 4d',element_list(index+node_index)-min_node_index+1);
            end
            node_index=node_index+node_number;

            fprintf(file_mesh,'\n');
        end

    else
        fprintf(file_mesh,'*Element, type=%s\n',marker.type);

        [element_number,node_number]=size(element_list);
        for element_index=1:element_number
            fprintf(file_mesh,'% 4d',element_index);
            for node_index=1:node_number
                fprintf(file_mesh,',% 4d',element_list(element_index,node_index)-min_node_index+1);
            end
            fprintf(file_mesh,'\n');
        end
    end

    % end part
    fprintf(file_mesh,'*End Part\n');
    fprintf(file_mesh,'**\n');
end

% write start of assembly
fprintf(file_mesh,'**\n');
fprintf(file_mesh,'** ASSEMBLY\n');
fprintf(file_mesh,'**\n');
fprintf(file_mesh,'*Assembly, name=Assembly\n');

% import part
for marker_index=1:length(marker_name_list)
    marker_name=marker_name_list{marker_index};
    if strcmp(marker_name,'point_list') || strcmp(marker_name,'name')
        continue;
    end
    
    fprintf(file_mesh,'**  \n');
    fprintf(file_mesh,'*Instance, name=Part-%s-1, part=Part-%s\n',marker_name,marker_name);
    fprintf(file_mesh,'*End Instance\n');
    fprintf(file_mesh,'**\n');
end

% write end of assembly
fprintf(file_mesh,'*End Assembly\n');

fclose(file_mesh);
clear('file_mesh');

end

function [element_list,ID_list]=getSeparteElement(element_list,number_list)
% separate mixed into element_list, number_list, ID_list
%

data_number=length(element_list);
% calculate element number
ID_list=zeros(length(number_list),1,'int64');
index_list=zeros(length(number_list),1,'int64');

element_index=1;
index=1;
while index < data_number
    ID_list(element_index)=element_list(index);
    index_list(element_index)=index;

    index=index+number_list(element_index)+1;
    element_index=element_index+1;
end

element_list(index_list)=[];
end

function type=typeINPID(id)
switch id
    case 3
        type='B31';
    case 5
        type='S3';
    case 7
        type='S4';
    case 10
        type='C3D4I';
    case 17
        type='C3D8I';
    otherwise
        error('idType: unknown identifier')
end
end
