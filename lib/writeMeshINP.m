function writeMeshINP(filename_mesh,part_list,point_list)
% write mesh data into inp file(ABAQUS analysis format)
%
% input:
% filename_mesh, point_list, part_list 
%
% notice:
% point_list is coordinate of all node
% part_list{part.name, part.mesh_list{mesh.element_list, mesh.element_type, mesh.element_ID}}
%
if strcmp(filename_mesh(end-3:end),'.inp')
    filename_mesh=filename_mesh(1:end-4);
end

file_mesh=fopen([filename_mesh,'.inp'],'w');

if ~iscell(part_list)
    part_list={part_list};
end

% write basic information of inp file
fprintf(file_mesh,'*Heading\n');
fprintf(file_mesh,'** Job name: Job-%s Model name: Model-%s\n',filename_mesh,filename_mesh);
fprintf(file_mesh,'** Generated by: matlab::writeMeshDataINP\n');
fprintf(file_mesh,'*Preprint, echo=NO, model=NO, history=NO, contact=NO\n');

% write start of part
fprintf(file_mesh,'**\n');
fprintf(file_mesh,'** PARTS\n');
fprintf(file_mesh,'**\n');

for part_index=1:length(part_list)
    part=part_list{part_index};

    % write part name
    fprintf(file_mesh,'*Part, name=Part-%s\n',part.name);

    % notice, element index in each part of inp file start from 1
    % search min and max element index of mesh
    mesh_list=part.mesh_list;
    min_point_index=int32(2147483647);
    max_point_index=int32(0);
    for mesh_index=1:length(mesh_list)
        mesh=mesh_list{mesh_index};
        min_point_index=min(min_point_index,min(min(mesh.element_list)));
        max_point_index=max(max_point_index,max(max(mesh.element_list)));
    end

    % write part point data
    fprintf(file_mesh,'*Node\n');
    for point_index=min_point_index:max_point_index
        fprintf(file_mesh,'% 7d',point_index-min_point_index+1);
        for dimension_index=1:3
            fprintf(file_mesh,',% 14f',point_list(point_index,dimension_index));
        end
        fprintf(file_mesh,'\n');
    end

    % write element data
    % notice, element index in each part of inp file start from 1
    element_off_set=0;
    for mesh_index=1:length(mesh_list)
        mesh=mesh_list{mesh_index};
        element_list=mesh.element_list;
        element_type=mesh.element_type;
%         element_ID=mesh.element_ID;

        fprintf(file_mesh,'*Element, type=%s\n',element_type);

        [element_number,node_number]=size(element_list);
        for element_index=1:element_number
            fprintf(file_mesh,'% 4d',element_index+element_off_set);
            for node_index=1:node_number
                fprintf(file_mesh,',% 4d',element_list(element_index,node_index)-min_point_index+1);
            end
            fprintf(file_mesh,'\n');
        end
        element_off_set=element_off_set+element_number;
    end

    % end part
    fprintf(file_mesh,'*End Part\n');
    fprintf(file_mesh,'**\n');
end

% write start of assembly
fprintf(file_mesh,'**\n');
fprintf(file_mesh,'** ASSEMBLY\n');
fprintf(file_mesh,'**\n');
fprintf(file_mesh,'*Assembly, name=Assembly\n');

% import part
for part_index=1:length(part_list)
    part=part_list{part_index};
    fprintf(file_mesh,'**  \n');
    fprintf(file_mesh,'*Instance, name=Part-%s-1, part=Part-%s\n',part.name,part.name);
    fprintf(file_mesh,'*End Instance\n');
    fprintf(file_mesh,'**\n');
end

% write end of assembly
fprintf(file_mesh,'*End Assembly\n');

fclose(file_mesh);
clear('file_mesh');

end